{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","calcularIRRF","rendimentos","anual","novaProposta","aliquotas","bases","Infinity","faixas","map","b","i","arr","faixa","Math","min","max","imposto","reduce","sum","f","parseFloat","toFixed","calcularRestituicao","rendimentoBruto","INSS","rendimentoBrutoAnual","desconto","base","impostoDevido","impostoJaPago","window","App","useState","salarioBruto","rendimentoTributavel","IRRF","IRRFProposta","salarioLiquido","salarioLiquidoProposta","value","undefined","restituicaoAntiga","restituicaoNova","dados","setDados","className","id","name","height","fontSize","placeholder","intlConfig","locale","defaultValue","decimalsLimit","onValueChange","calcularINSS","valor","texto","format","abs","color","visibility","exibeDiffSalarioLiquido","textAlign","listStyle","marginTop","position","bottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e3412f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport React, { useState } from 'react';\r\n\r\nvar formatter = new Intl.NumberFormat('pt-BR', {\r\n  style: 'currency',\r\n  currency: 'BRL'\r\n  // These options are needed to round to whole numbers if that's what you want.\r\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n});\r\n\r\nfunction App() {\r\n\r\n  const [dados, setDados] = useState(\r\n    {\r\n      salarioBruto: null,\r\n      INSS: null,\r\n      rendimentoTributavel: null,\r\n      IRRF: null,\r\n      IRRFProposta: null,\r\n      salarioLiquido: null,\r\n      salarioLiquidoProposta: null,\r\n      value: undefined,\r\n      restituicaoAntiga: null,\r\n      restituicaoNova: null\r\n    }\r\n  )\r\n\r\n  function onValueChange(value, name) {\r\n\r\n    if (value == undefined) {\r\n      setDados({\r\n        value,\r\n        salarioBruto: 0,\r\n        INSS: 0,\r\n        rendimentoTributavel: 0,\r\n        IRRF: 0,\r\n        salarioLiquido: 0,\r\n        IRRFProposta: 0,\r\n        salarioLiquidoProposta: 0,\r\n        restituicaoAntiga: 0,\r\n        restituicaoNova: 0\r\n      });\r\n      return true;\r\n    }\r\n\r\n    var INSS = calcularINSS(value);\r\n    var rendimentoTributavel = value - INSS;\r\n    var IRRF = calcularIRRF(rendimentoTributavel);\r\n    var IRRFProposta = calcularIRRF(rendimentoTributavel, false, true);\r\n    var salarioLiquido = rendimentoTributavel - IRRF;\r\n    var salarioLiquidoProposta = rendimentoTributavel - IRRFProposta;\r\n\r\n    var restituicaoAntiga = calcularRestituicao(value, INSS)\r\n    var restituicaoNova = calcularRestituicao(value, INSS, true)\r\n\r\n\r\n    setDados({\r\n      value,\r\n      salarioBruto: value,\r\n      INSS,\r\n      rendimentoTributavel,\r\n      IRRF,\r\n      salarioLiquido,\r\n      IRRFProposta,\r\n      salarioLiquidoProposta,\r\n      \r\n      restituicaoAntiga,\r\n      restituicaoNova\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  function exibeDiffSalarioLiquido() {\r\n    \r\n    var diffLiq = (dados.salarioLiquidoProposta - dados.salarioLiquido) * 12\r\n    var diffRestituicao = dados.restituicaoNova - dados.restituicaoAntiga;\r\n\r\n    let valor = diffLiq + diffRestituicao;\r\n\r\n    if (dados.value == undefined) {\r\n      return <div className=\"dot-stretching\"></div>\r\n    } else {\r\n      if (valor == 0)\r\n        return <span>Nada muda para você!</span>\r\n    }\r\n\r\n    var texto = formatter.format( Math.abs(valor))\r\n    let style = {};\r\n    if (valor < 0) {\r\n      style = { color: \"red\" }\r\n      texto = \"MENOS \" + texto + \" por ano!\";\r\n    }\r\n    else {\r\n      style = { color: \"green\" }\r\n      texto = \"MAIS \" + texto + \" por ano!\";\r\n    }\r\n    return <>\r\n      <div style={{visibility: dados.value != undefined ? \"hidden\" : \"\" }} className=\"dot-stretching\"></div>\r\n      <span>Você receberá <span style={style}>{texto}</span> </span>\r\n    </>\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>\r\n          Digite o seu salário bruto*:\r\n        </p>\r\n        <CurrencyInput\r\n          id=\"input-example\"\r\n          name=\"input-name\"\r\n          style={{ height: 50, fontSize: 26 }}\r\n          placeholder=\"Digite o seu salário bruto\"\r\n          intlConfig={{ locale: 'pt-BR', currency: 'BRL' }}\r\n          defaultValue={0}\r\n          decimalsLimit={2}\r\n          onValueChange={onValueChange}\r\n        />\r\n        <h2>{exibeDiffSalarioLiquido()}</h2>\r\n\r\n        <div style={{ fontSize: 11, visibility: dados.value == undefined ? \"hidden\" : \"\" }}>\r\n          <b>Dados:</b>\r\n          <ul style={{ textAlign: \"left\", listStyle: \"none\" }}>\r\n            <li>Salário Bruto: {formatter.format(dados.salarioBruto)}</li>\r\n            <li>INSS: {formatter.format(dados.INSS)}</li>\r\n            <li>Rendimento tributável: {formatter.format(dados.rendimentoTributavel)}</li>\r\n          </ul>\r\n          <b>Regras atuais</b>\r\n          <ul style={{ textAlign: \"left\", listStyle: \"none\" }}>\r\n            <li>Imposto de Renda: {formatter.format(dados.IRRF)}</li>\r\n            <li>Salário Líquido: {formatter.format(dados.salarioLiquido)}</li>\r\n            <li>Restituição anual: {formatter.format(dados.restituicaoNova)}</li>\r\n          </ul>\r\n          <b>Com a Proposta</b>\r\n          <ul style={{ textAlign: \"left\", listStyle: \"none\" }}>\r\n            <li>Imposto de Renda: {formatter.format(dados.IRRFProposta)}</li>\r\n            <li>Salário Líquido: {formatter.format(dados.salarioLiquidoProposta)}</li>\r\n            <li>Restituição anual: {formatter.format(dados.restituicaoNova)}</li>\r\n          </ul>\r\n        </div>\r\n      <p style={{fontSize: 10,marginTop: 50, position: \"relative\",bottom: 15}}> *Os seus dados <b>NÃO</b> serão gravados e/ou armanezados neste site. Respeitamos a sua privacidade.</p>\r\n      </header>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction calcularIRRF(rendimentos, anual = false, novaProposta=false) {\r\n  // Fonte: http://receita.economia.gov.br/acesso-rapido/tributos/irpf-imposto-de-renda-pessoa-fisica#calculo_mensal_IRPF\r\n  \r\n  let aliquotas = [0, 0.075, 0.15, 0.225, 0.275];    // aliquotas de IR\r\n  \r\n  let bases = [1903.98, 2826.65, 3751.05, 4664.68, Infinity]; // bases de calculo\r\n  if (anual){\r\n    bases = [22847.76, 33919.8, 45012.6, 55976.16, Infinity]; // bases de calculo\r\n  }\r\n\r\n\r\n  if (novaProposta){\r\n    aliquotas = [0, 0.075, 0.15, 0.225, 0.275];    // aliquotas de IR\r\n    bases = [2500, 3200, 4250, 5300, Infinity]; // bases de calculo\r\n    if (anual){\r\n      bases = [30000, 38400,51000, 63600, Infinity ];\r\n    }\r\n  }\r\n\r\n\r\n  // calcula tamanho das faixas de tributacao conforme rendimentos\r\n  const faixas = bases.map(function (b, i, arr) {\r\n    // a faixa atual eh no maximo o valor da base de calculo\r\n    var faixa = Math.min(rendimentos, b)\r\n    // se a base nao for a primeira, precisamos subtrair o valor da base anterior\r\n    if (i !== 0) {\r\n      faixa -= arr[i - 1];\r\n    }\r\n    // bases maiores que rendimentos podem resultar em faixas negativas, por isso zeramos essas\r\n    faixa = Math.max(faixa, 0);\r\n    return faixa;\r\n  });\r\n  // calcula imposto conforme a aliquota de cada faixa e soma ao valor total\r\n  const imposto = faixas.reduce(function (sum, f, i) {\r\n    // calcula imposto da faixa multiplicando sua aliquota\r\n    const impFaixa = (f * aliquotas[i]);\r\n    return sum += impFaixa;\r\n  }, 0);\r\n  // imposto a pagar sobre rendimentos\r\n  return parseFloat(imposto).toFixed(2);\r\n}\r\n\r\n\r\n\r\n\r\nfunction calcularINSS(rendimentos) {\r\n  rendimentos = Math.min(rendimentos, 6433.57); // 6433.57 é o teto para o calculo do INSS\r\n\r\n  const aliquotas = [0.075, 0.09, 0.12, 0.14];    // aliquotas de IR\r\n  const bases = [1100, 2203.48, 3305.22, 6433.57]; // bases de calculo\r\n\r\n  // calcula tamanho das faixas de tributacao conforme rendimentos\r\n  const faixas = bases.map(function (b, i, arr) {\r\n    // a faixa atual eh no maximo o valor da base de calculo\r\n    var faixa = Math.min(rendimentos, b)\r\n    // precisamos subtrair o valor da base anterior\r\n    if (i !== 0) {\r\n      faixa -= arr[i - 1];\r\n    }\r\n    // bases maiores que rendimentos podem resultar em faixas negativas, por isso zeramos essas\r\n    faixa = Math.max(faixa, 0);\r\n    return faixa;\r\n  });\r\n  // calcula imposto conforme a aliquota de cada faixa e soma ao valor total\r\n  const imposto = faixas.reduce(function (sum, f, i) {\r\n    // calcula imposto da faixa multiplicando sua aliquota\r\n    const impFaixa = parseFloat((f * aliquotas[i]).toFixed(2))\r\n    return sum += impFaixa;\r\n  }, 0);\r\n  // imposto a pagar sobre rendimentos\r\n  return parseFloat(imposto.toFixed(2));\r\n}\r\nwindow.calcularRestituicao = calcularRestituicao;\r\n\r\nfunction calcularRestituicao(rendimentoBruto,INSS, novaProposta = false){\r\n  var rendimentoBrutoAnual = rendimentoBruto * 12;\r\n  var desconto = Math.min(16754.34,rendimentoBrutoAnual * 0.2 );\r\n\r\n  if (novaProposta && rendimentoBruto > 3333)\r\n    desconto = 0;\r\n  \r\n  var base = rendimentoBrutoAnual - desconto;\r\n\r\n  let impostoDevido = calcularIRRF(base, true, novaProposta);\r\n  let impostoJaPago = calcularIRRF(rendimentoBrutoAnual - (INSS * 12), true, novaProposta);\r\n  \r\n  return ((impostoDevido - impostoJaPago) * -1).toFixed(2);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}